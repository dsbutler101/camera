---
 - name: get service account key id
   local_action: "shell gcloud -q iam service-accounts keys list --iam-account {{ role_name }}@{{ project_id }}.iam.gserviceaccount.com --managed-by user | grep -v ^KEY_ID | head -1 | cut -d ' ' -f 1"
   register: key_id
   become: no

 - name: check whether key id is configured on server
   shell: "grep {{ key_id.stdout }} /home/pi/key-file.json"
   register: grep_output
   ignore_errors: True
   when: key_id.stdout != ""

 - name: conditionally delete keys
   local_action: "shell gcloud -q iam service-accounts keys delete --iam-account {{ role_name }}@{{ project_id }}.iam.gserviceaccount.com {{ key_id.stdout }}"
   become: no
   when: key_id.stdout != "" and grep_output.stdout == ""

 - name: conditionally create new key
   local_action: "shell gcloud -q iam service-accounts keys create --iam-account {{ role_name }}@{{ project_id }}.iam.gserviceaccount.com /dev/stdout 2> /dev/null"
   register: key_content
   become: no
   when: key_id.stdout == "" or grep_output.stdout == ""

 - name: copy key contents to server
   copy:
      content: "{{ key_content.stdout }}"
      dest: /home/pi/key-file.json
      mode: 0600
      owner: pi
      group: pi
   when: key_content.stdout is defined

 - name: activate service account
   shell: "gcloud auth activate-service-account {{ role_name }}@{{ project_id }}.iam.gserviceaccount.com --project {{ project_id }} --key-file /home/pi/key-file.json"
   become: no
